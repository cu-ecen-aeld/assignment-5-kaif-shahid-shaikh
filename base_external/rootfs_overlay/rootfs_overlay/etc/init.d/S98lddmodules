#!/bin/sh
### BEGIN INIT INFO
# Provides:          lddmodules
# Required-Start:    $local_fs $remote_fs $syslog $time
# Required-Stop:     $local_fs $remote_fs $syslog $time
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
### END INIT INFO

SCULL_LOAD=/usr/local/bin/scull_load
SCULL_UNLOAD=/usr/local/bin/scull_unload
MODULE_LOAD=/usr/local/bin/module_load
MODULE_UNLOAD=/usr/local/bin/module_unload
AESDCHAR_LOAD=/usr/local/bin/aesdchar_load
AESDCHAR_UNLOAD=/usr/local/bin/aesdchar_unload

load_mod() { modprobe "$1" 2>/dev/null || insmod /lib/modules/*/extra/"$1".ko 2>/dev/null || true; }
unload_mod() { rmmod "$1" 2>/dev/null || true; }

do_start() {
  echo "[S98lddmodules] starting: loading LDD modules"
  if [ -x "$SCULL_LOAD" ]; then echo "→ scull: helper"; "$SCULL_LOAD" || true; else echo "→ scull: fallback"; load_mod scull; fi
  if [ -x "$MODULE_LOAD" ]; then echo "→ faulty: helper"; "$MODULE_LOAD" faulty || true; else echo "→ faulty: fallback"; insmod /lib/modules/*/extra/faulty.ko 2>/dev/null || true; fi
  if [ -x "$AESDCHAR_LOAD" ]; then echo "→ aesdchar: helper"; "$AESDCHAR_LOAD" || true; else echo "→ aesdchar: fallback"; load_mod aesdchar; fi
  echo "→ hello: loading"; load_mod hello
}

do_stop() {
  echo "[S98lddmodules] stopping: unloading LDD modules"
  echo "→ hello: unloading"; unload_mod hello
  echo "→ aesdchar: unloading"; if [ -x "$AESDCHAR_UNLOAD" ]; then "$AESDCHAR_UNLOAD" || true; else unload_mod aesdchar; fi
  echo "→ faulty: unloading"; if [ -x "$MODULE_UNLOAD" ]; then "$MODULE_UNLOAD" faulty || true; else rmmod faulty 2>/dev/null || true; fi
  echo "→ scull: unloading"; if [ -x "$SCULL_UNLOAD" ]; then "$SCULL_UNLOAD" || true; else unload_mod scull; fi
}

case "$1" in
  start) do_start ;;
  stop) do_stop ;;
  restart) do_stop; do_start ;;
  *) echo "Usage: $0 {start|stop|restart}"; exit 1 ;;
esac

exit 0
